// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "10/31/2023 14:43:07"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          exercise1
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module exercise1_vlg_vec_tst();
// constants                                           
// general purpose registers
reg Ci;
reg CLK;
reg Co;
// wires                                               
wire A;
wire B;
wire C;
wire D;
wire E;
wire F;
wire G;
wire L0;
wire L1;

// assign statements (if any)                          
exercise1 i1 (
// port map - connection between master ports and signals/registers   
	.A(A),
	.B(B),
	.C(C),
	.Ci(Ci),
	.CLK(CLK),
	.Co(Co),
	.D(D),
	.E(E),
	.F(F),
	.G(G),
	.L0(L0),
	.L1(L1)
);
initial 
begin 
#1000000 $finish;
end 

// Ci
initial
begin
	Ci = 1'b1;
	Ci = #5000 1'b0;
	Ci = #10000 1'b1;
	Ci = #5000 1'b0;
	Ci = #5000 1'b1;
	Ci = #10000 1'b0;
	Ci = #20000 1'b1;
	Ci = #10000 1'b0;
	Ci = #5000 1'b1;
	Ci = #10000 1'b0;
	Ci = #5000 1'b1;
	Ci = #5000 1'b0;
	Ci = #5000 1'b1;
	Ci = #15000 1'b0;
	Ci = #5000 1'b1;
	Ci = #10000 1'b0;
	Ci = #5000 1'b1;
	Ci = #5000 1'b0;
	Ci = #20000 1'b1;
	Ci = #15000 1'b0;
	Ci = #10000 1'b1;
	Ci = #5000 1'b0;
	Ci = #10000 1'b1;
	Ci = #5000 1'b0;
	Ci = #5000 1'b1;
	Ci = #10000 1'b0;
	Ci = #5000 1'b1;
	Ci = #5000 1'b0;
	Ci = #5000 1'b1;
	Ci = #5000 1'b0;
	Ci = #10000 1'b1;
	Ci = #5000 1'b0;
	Ci = #5000 1'b1;
	Ci = #15000 1'b0;
	Ci = #5000 1'b1;
	Ci = #5000 1'b0;
	Ci = #5000 1'b1;
	Ci = #10000 1'b0;
	Ci = #5000 1'b1;
	Ci = #10000 1'b0;
	Ci = #5000 1'b1;
	Ci = #20000 1'b0;
	Ci = #10000 1'b1;
	Ci = #20000 1'b0;
	Ci = #35000 1'b1;
	Ci = #5000 1'b0;
	Ci = #10000 1'b1;
	Ci = #10000 1'b0;
	Ci = #5000 1'b1;
	Ci = #10000 1'b0;
	Ci = #5000 1'b1;
	Ci = #15000 1'b0;
	Ci = #10000 1'b1;
	Ci = #5000 1'b0;
	Ci = #5000 1'b1;
	Ci = #30000 1'b0;
	Ci = #30000 1'b1;
	Ci = #5000 1'b0;
	Ci = #5000 1'b1;
	Ci = #5000 1'b0;
	Ci = #5000 1'b1;
	Ci = #10000 1'b0;
	Ci = #5000 1'b1;
	Ci = #20000 1'b0;
	Ci = #5000 1'b1;
	Ci = #10000 1'b0;
	Ci = #5000 1'b1;
	Ci = #15000 1'b0;
	Ci = #10000 1'b1;
	Ci = #15000 1'b0;
	Ci = #10000 1'b1;
	Ci = #10000 1'b0;
	Ci = #15000 1'b1;
	Ci = #10000 1'b0;
	Ci = #5000 1'b1;
	Ci = #5000 1'b0;
	Ci = #5000 1'b1;
	Ci = #5000 1'b0;
	Ci = #5000 1'b1;
	Ci = #5000 1'b0;
	Ci = #25000 1'b1;
	Ci = #10000 1'b0;
	Ci = #5000 1'b1;
	Ci = #5000 1'b0;
	Ci = #10000 1'b1;
	Ci = #5000 1'b0;
	Ci = #25000 1'b1;
	Ci = #10000 1'b0;
	Ci = #5000 1'b1;
	Ci = #20000 1'b0;
	Ci = #10000 1'b1;
	Ci = #5000 1'b0;
	Ci = #15000 1'b1;
	Ci = #15000 1'b0;
	Ci = #10000 1'b1;
	Ci = #5000 1'b0;
	Ci = #10000 1'b1;
	Ci = #5000 1'b0;
	Ci = #5000 1'b1;
	Ci = #15000 1'b0;
	Ci = #5000 1'b1;
	Ci = #5000 1'b0;
	Ci = #10000 1'b1;
	Ci = #5000 1'b0;
	Ci = #5000 1'b1;
	Ci = #20000 1'b0;
end 

// Co
initial
begin
	Co = 1'b1;
	Co = #25000 1'b0;
	Co = #5000 1'b1;
	Co = #20000 1'b0;
	Co = #10000 1'b1;
	Co = #20000 1'b0;
	Co = #5000 1'b1;
	Co = #10000 1'b0;
	Co = #15000 1'b1;
	Co = #10000 1'b0;
	Co = #10000 1'b1;
	Co = #5000 1'b0;
	Co = #10000 1'b1;
	Co = #15000 1'b0;
	Co = #5000 1'b1;
	Co = #25000 1'b0;
	Co = #25000 1'b1;
	Co = #5000 1'b0;
	Co = #5000 1'b1;
	Co = #10000 1'b0;
	Co = #10000 1'b1;
	Co = #15000 1'b0;
	Co = #10000 1'b1;
	Co = #5000 1'b0;
	Co = #10000 1'b1;
	Co = #5000 1'b0;
	Co = #25000 1'b1;
	Co = #5000 1'b0;
	Co = #5000 1'b1;
	Co = #5000 1'b0;
	Co = #10000 1'b1;
	Co = #35000 1'b0;
	Co = #5000 1'b1;
	Co = #10000 1'b0;
	Co = #20000 1'b1;
	Co = #25000 1'b0;
	Co = #5000 1'b1;
	Co = #10000 1'b0;
	Co = #15000 1'b1;
	Co = #10000 1'b0;
	Co = #5000 1'b1;
	Co = #5000 1'b0;
	Co = #5000 1'b1;
	Co = #15000 1'b0;
	Co = #5000 1'b1;
	Co = #25000 1'b0;
	Co = #10000 1'b1;
	Co = #10000 1'b0;
	Co = #5000 1'b1;
	Co = #5000 1'b0;
	Co = #5000 1'b1;
	Co = #5000 1'b0;
	Co = #10000 1'b1;
	Co = #10000 1'b0;
	Co = #35000 1'b1;
	Co = #10000 1'b0;
	Co = #15000 1'b1;
	Co = #5000 1'b0;
	Co = #5000 1'b1;
	Co = #5000 1'b0;
	Co = #5000 1'b1;
	Co = #5000 1'b0;
	Co = #10000 1'b1;
	Co = #5000 1'b0;
	Co = #25000 1'b1;
	Co = #40000 1'b0;
	Co = #5000 1'b1;
	Co = #5000 1'b0;
	Co = #10000 1'b1;
	Co = #5000 1'b0;
	Co = #5000 1'b1;
	Co = #10000 1'b0;
	Co = #5000 1'b1;
	Co = #10000 1'b0;
	Co = #25000 1'b1;
	Co = #20000 1'b0;
	Co = #5000 1'b1;
	Co = #25000 1'b0;
	Co = #15000 1'b1;
	Co = #5000 1'b0;
	Co = #5000 1'b1;
	Co = #10000 1'b0;
	Co = #20000 1'b1;
	Co = #10000 1'b0;
	Co = #5000 1'b1;
	Co = #5000 1'b0;
	Co = #5000 1'b1;
	Co = #15000 1'b0;
	Co = #10000 1'b1;
end 

// CLK
initial
begin
	repeat(16)
	begin
		CLK = 1'b0;
		CLK = #30000 1'b1;
		# 30000;
	end
	CLK = 1'b0;
	CLK = #30000 1'b1;
end 
endmodule

